##What happens when you initialize a repository? Why do you need to do it?
The .git folder is added to the current folder. The current now becomes a git repository

##How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is just a virutal storage of the files that I should presumably commint into my repository. It should help 
me in remembering that those are the things I should commit when I am ready to do so. The staging area is also very needed when
we want to commit multiple files at the same time. In contrast, the working directory is where the files are saved and without being committed

#How can you use the staging area to make sure you have one commit per logical change?
You can add all you files in the staging area and commit them at the same time.


#What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches are needed when you wanna try some fucntions on your projects that is a derivative of the core project. 
In this way, you will have something that looks like a sub categories of the core project.

#How do the diagrams help you visualize the branch structure?
I mapping all the different commits, it helps me find where in the structure  I am in and whether the changes I
 currrently working are going to be traceable later on after and won`t affect the other heads.

 #What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
 In merging two branches together, we have all the code from the two branches combined.
 For the way part, it will make things easier to understand.

 #What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
 Automatic mergin is helpful but has its limitations when there are snippets that were all modified in the different versions.
 